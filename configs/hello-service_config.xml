<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
    <actions>
        <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
        <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
            <jobProperties/>
            <triggers/>
            <parameters/>
            <options/>
        </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
    </actions>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties/>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.70">
        <script>pipeline {
            environment {
            registry = &quot;heapstroboy/hello-service&quot;
            registryCredential = &apos;dockerhub&apos;
            dockerImage = &apos;&apos;
            }
            agent any
            stages {
            stage(&apos;Cloning Git&apos;) {
            steps {
            git branch: &apos;master&apos;,
            credentialsId: &apos;github&apos;,
            url: &apos;https://github.com/heapstroboy/hello_app.git&apos;

            sh &quot;ls -lat&quot;
            }
            }
            stage(&apos;Build&apos;) {
            steps {
            sh &apos;mvn clean install&apos;
            }
            }
            stage(&apos;Building docker image&apos;) {
            steps{
            script {
            dockerImage = docker.build registry + &quot;:$BUILD_NUMBER&quot;
            }
            }
            }
            stage(&apos;Deploy Image&apos;) {
            steps{
            script {
            docker.withRegistry( &apos;&apos;, registryCredential ) {
            dockerImage.push()
            }
            }
            }
            }
            stage(&apos;Remove Unused docker image&apos;) {
            steps{
            sh &quot;docker rmi $registry:$BUILD_NUMBER&quot;
            }
            }
            }
            }
            stage(&apos;Build&apos;) {
            steps {
            sh &apos;mvn clean install&apos;
            }
            }
            stage(&apos;Building docker image&apos;) {
            steps{
            script {
            dockerImage = docker.build registry + &quot;:$BUILD_NUMBER&quot;
            }
            }
            }
            stage(&apos;Deploy Image&apos;) {
            steps{
            script {
            docker.withRegistry( &apos;&apos;, registryCredential ) {
            dockerImage.push()
            }
            }
            }
            }
            stage(&apos;Remove Unused docker image&apos;) {
            steps{
            sh &quot;docker rmi $registry:$BUILD_NUMBER&quot;
            }
            }
            }
            }</script>
        <sandbox>true</sandbox>
    </definition>
    <triggers/>
    <disabled>false</disabled>
</flow-definition>
